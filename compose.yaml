include:
  - path: app/connector/neon/compose.yaml
services:
  engine:
    build:
      context: engine
      dockerfile: Dockerfile.engine
      pull: true
    environment:
      AUTHN_CONFIG_PATH: /md/auth_config.json
      ENABLE_CORS: "true"
      ENABLE_SQL_INTERFACE: "true"
      INTROSPECTION_METADATA_FILE: /md/metadata.json
      METADATA_PATH: /md/open_dd.json
      OTLP_ENDPOINT: http://local.hasura.dev:4317
    extra_hosts:
      - local.hasura.dev:host-gateway
    labels:
      io.hasura.ddn.service-name: engine
    ports:
      - 3280:3000
  otel-collector:
    command:
      - --config=/etc/otel-collector-config.yaml
    environment:
      HASURA_DDN_PAT: ${HASURA_DDN_PAT}
    image: otel/opentelemetry-collector-contrib:0.104.0
    ports:
      - 4317:4317
      - 4318:4318
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    extra_hosts:
      - local.hasura.dev:host-gateway
    labels:
      io.hasura.ddn.service-name: prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --enable-feature=exemplar-storage

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana-config/datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
      - ./grafana-config/dashboards:/etc/grafana/provisioning/dashboards
      - grafana-storage:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    extra_hosts:
      - local.hasura.dev:host-gateway
    labels:
      io.hasura.ddn.service-name: grafana
      
  elastic-apm-server:
    image: docker.elastic.co/apm/apm-server:9.0.1
    ports:
      - "8200:8200"
    volumes:
      - ./elastic/apm-server.docker.yml:/usr/share/apm-server/apm-server.yml
    extra_hosts:
      - local.hasura.dev:host-gateway
    labels:
      io.hasura.ddn.service-name: elastic-apm

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:9.0.0
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m -Djava.util.logging.manager=org.apache.logging.log4j.jul.LogManager"
      - xpack.security.enabled=false
      - "http.host=0.0.0.0"
      - "network.host=0.0.0.0"
      - "transport.host=0.0.0.0"
      - "http.cors.enabled=true"
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    extra_hosts:
      - local.hasura.dev:host-gateway
    labels:
      io.hasura.ddn.service-name: elasticsearch
  kibana:
    image: docker.elastic.co/kibana/kibana:9.0.0
    ports:
      - "5601:5601"
    # volumes:
    #   - ./kibana.yml:/usr/share/kibana/config/kibana.yml
volumes:
  grafana-storage:
  elasticsearch-data:
